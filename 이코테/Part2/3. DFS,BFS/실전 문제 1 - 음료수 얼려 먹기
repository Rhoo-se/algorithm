import sys
from collections import deque
import copy

N, M = map(int, sys.stdin.readline().split())
graph = []
visited = [[False] * M for _ in range(N)]

for i in range(N):
    graph.append(list(map(int, sys.stdin.readline().strip())))

dx = [0, 0, -1, 1]
dy = [1, -1, 0, 0]
q = deque()
rst = 0
def bfs(x, y):
    if graph[x][y] == 1:
        return False
    if visited[x][y] == True:
        return False
    while q:
        x, y = q.popleft()
        visited[x][y] = True
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            if nx < 0 or nx >= N or ny < 0 or ny >= M:
                continue
            if visited[nx][ny] == True:
                continue
            if graph[nx][ny] == 0:
                q.append((nx, ny))
    return True

for i in range(N):
    for j in range(M):
        if bfs(i, j) == True:
            q.append((i, j))
            bfs(i, j)
            rst += 1
print(rst)
