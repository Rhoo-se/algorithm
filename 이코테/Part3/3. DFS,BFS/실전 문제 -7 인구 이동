import sys
from collections import deque
import copy

N, L, R = map(int, sys.stdin.readline().split())

graph = []
visited = [[False]*N for _ in range(N)]

global day
global sum

dx = [0, 0, -1, 1]
dy = [1, -1, 0, 0]

for i in range(N):
    graph.append(list(map(int, sys.stdin.readline().split())))
print(graph)

result = copy.deepcopy(graph)

q = deque()

def bfs(x, y):
    global sum
    sum = 0
    while q:
        x, y = q.popleft()
        if visited[x][y] == True:
            break
        visited[x][y] = True
        sum += graph[x][y]
        for i in range(4):
            nx = x + dx
            ny = y + dy
            if nx < 0 or nx >= N or ny < 0 or ny >= N:
                continue
            if visited[nx][ny] == True:
                continue
            if abs(graph[x][y] - graph[nx][ny]) < L or abs(graph[x][y] - graph[nx][ny]) > R:
                continue
            q.append((nx, ny))


for i in range(N):
    for j in range(N):
        q.append((i, j))
        bfs(i, j)
        if sum != 0:



print(day)


수정을 더 해야한다.
