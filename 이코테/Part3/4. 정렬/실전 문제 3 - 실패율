def solution(N, stages):
    answer = []
    fail_rate = [0] * (N+1) #1~ N까지 각 스테이지의 실패율 저장
    stages_cnt = [0] * (N+2)
    stages_sort = []
    stages_unclear = [0] * (N+2)  # 각 스테이지에 도달했으나 아직 클리어하지 못한 플레이어의 수
    stages_clear = [0] * (N+2) # 각스테이지에 도달한 플레이어의 수
    
    user = len(stages)
    
    for i in range(len(stages)): # stages 계수정렬 위한 횟수 저장
        stages_cnt[(stages[i])] += 1
        
    for i in range(1, N+2): # stages 계수정렬 하여 stages_sort 생성
        if stages_cnt > 0:
            for j in range(stages_cnt[i]):
                stages_sort.append(i)
    
    for i in range(len(stages_sort)): # stage_sort로 유저들의 현 stage파악 1 1 2 3 4 4 5
        stage_unclear[stages_sort[i]] += 1 # 각 스테이지별로 몇명 머무르는지 파악
        
    crt_user = 0
    
    for i in range(1, N+1):
        stage_clear[i] = user - crt_user # 스테이지에 이미 도달한 플레이어 수
        fail_rate[i] = stage_unclear[i] / stage_clear[i] # 실패율 계산
        crt_user += stage_unclear[i]
    
    for i in range(N+1): #마지막 정렬해서 인덱스 출력하는 부분만 수정하자
        answer = fail_rate.sort(key = lambda x : -x)
    
    return answer
